// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from '@xata.io/client';
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client';

const tables = [
	{
		name: 'uploads',
		columns: [
			{ name: 'name', type: 'text', notNull: true, defaultValue: 'null' },
			{ name: 'key', type: 'text', notNull: true, defaultValue: 'null' },
			{ name: 'url', type: 'text', notNull: true, defaultValue: 'null' }
		]
	}
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Uploads = InferredTypes['uploads'];
export type UploadsRecord = Uploads & XataRecord;

export type DatabaseSchema = {
	uploads: UploadsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
	databaseURL: process.env.XATA_DATABASE_URL
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables);
	}
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
	if (instance) return instance;

	instance = new XataClient();
	return instance;
};
